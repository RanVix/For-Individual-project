from typing import Union
import disnake
from disnake.ext import commands
import requests
import xml.etree.ElementTree as ET

class BotMoreCommands(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
    @commands.slash_command(name='curs', description='–ü–æ–ª—É—á–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –≤–∞–ª—é—Ç –∫ —Ä—É–±–ª—é.')
    async def curs(self, interaction: disnake.CommandInteraction):
        url = 'https://www.cbr.ru/scripts/XML_daily.asp'
        try:
            response = requests.get(url)
            response.raise_for_status()

            root = ET.fromstring(response.content)

            currencies_of_interest = {
                "–î–æ–ª–ª–∞—Ä": "USD",
                "–ï–≤—Ä–æ": "EUR",
                "–Æ–∞–Ω—å": "CNY",
                "–õ–∏—Ä–∞": "TRY",
                "–ì—Ä–∏–≤–Ω–∞": "UAH",
                "–ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–µ —Ä—É–±–ª–∏": "BYN"
            }

            embed = disnake.Embed(title="–ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –≤–∞–ª—é—Ç –∫ —Ä—É–±–ª—é: ", color=disnake.Color.orange())
            embed.set_footer(text="–î–∞–Ω–Ω—ã–µ –¶–ë –†–§.")

            for currency in root.findall('Valute'):
                name = currency.find('Name').text
                value = currency.find('Value').text.replace(',', '.')
                code = currency.find('CharCode').text

                if code in currencies_of_interest.values():
                    embed.add_field(name=f"{name} ({code})", value=f"{value} —Ä—É–±.", inline=False)

            await interaction.response.send_message(embed=embed)
        except Exception as e:
            embedEr = disnake.Embed(title="–û—à–∏–±–∫–∞!üò•",colour=disnake.Color.orange())
            embedEr.set_author(name="Ranny", icon_url=interaction.me.avatar.url)
            await interaction.send(embed=embedEr, ephemeral=True)
            print(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ /curs: {str(e)}')

    @commands.slash_command(name='avatar', description='–ü–æ–ª—É—á–∏—Ç—å –∞–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.')
    async def avatar(self, interaction: disnake.CommandInteraction, user: Union[disnake.Member, disnake.User] = None):
        user = user or interaction.user

        avatar_url = user.avatar.url if user.avatar else None

        if avatar_url:
            embed = disnake.Embed(title=f"–ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.name}", color=disnake.Color.orange(),
                                  description=f"[üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –∞–≤–∞—Ç–∞—Ä–∫—É]({user.display_avatar.url})")
            embed.set_image(url=avatar_url)
            await interaction.response.send_message(embed=embed)
        else:
            embedEr = disnake.Embed(title="–û—à–∏–±–∫–∞!üò•",
                                    description="–£ –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∞–≤–∞—Ç–∞—Ä–∞!",
                                    colour=disnake.Color.orange())
            embedEr.set_author(name="Ranny", icon_url=interaction.me.avatar.url)
            await interaction.send(embed=embedEr, ephemeral=True)


    @commands.slash_command(name='banner', description='–ü–æ–ª—É—á–∏—Ç—å –±–∞–Ω–Ω–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.', breif='–ü–æ–ª—É—á–∏—Ç—å –±–∞–Ω–Ω–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.', usage="banner <@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å>")
    async def banner(self, interaction: disnake.ApplicationCommandInteraction, user: Union[disnake.Member, disnake.User] = None):
        user = user or interaction.user
        user = await self.bot.fetch_user(user.id)
        if not user.banner:
            embed = disnake.Embed(title="–û—à–∏–±–∫–∞ –±–∞–Ω–Ω–µ—Ä–∞üò•", description="–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –±–∞–Ω–Ω–µ—Ä–∞!", color=disnake.Color.orange())
            return await interaction.response.send_message(embed=embed, ephemeral=True)
        embed = disnake.Embed(title=f"–ë–∞–Ω–Ω–µ—Ä {user}:",
                                description=f"[üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –±–∞–Ω–Ω–µ—Ä]({user.banner.url})", color=disnake.Color.orange())
        embed.set_image(url=user.banner.url)
        await interaction.response.send_message(embed=embed)

def setup(bot):
    bot.add_cog(BotMoreCommands(bot))